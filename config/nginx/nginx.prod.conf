worker_processes  1;

events {
    worker_connections  1024;
}

http {
    sendfile             on;
    keepalive_timeout    65;
    client_max_body_size 5M;

    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Block alihack
    deny 23.27.103.106/32;

    upstream api {
        least_conn;
        server api:3000 max_fails=3 fail_timeout=30s;
    }

    upstream app {
        least_conn;
        server app:5000 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 443 ssl;
        server_name test-project.online;
        ssl_certificate /etc/nginx/certs/live/test-project.online/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/live/test-project.online/privkey.pem;
        return 301 https://www.test-project.online$request_uri;
    }

    server {
        listen 443 ssl http2;
        charset utf-8;
        server_name www.test-project.online;
        ssl_certificate /etc/nginx/certs/live/www.test-project.online/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/live/www.test-project.online/privkey.pem;

        if ($request_method = 'OPTIONS') {
          return 200;
        }

        root /var/www/html;

        index index.html;

        # To allow POST on static pages
        error_page  405     =200 $uri;

        location / {
            proxy_pass http://app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            break;
        }

        location ~* \.(eot|otf|ttf|woff|woff2)$ {
            add_header Access-Control-Allow-Origin *;
        }

        location ~ /api/(?<url>.*) {
            proxy_pass http://api/$url$is_args$args;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /images/ {
            alias /public/images/;
        }

        location /health-check {
          return 200;
          access_log off;
        }
    }

    server {
        listen 80;
        server_name www.test-project;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 80;
        server_name test-project;
        return 301 https://$server_name$request_uri;
    }
}

